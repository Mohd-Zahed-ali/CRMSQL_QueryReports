ALTER function [dbo].[fCore_Var4](@e xml) returns varchar(max)
as begin 
			declare @vehicleno int =0 
			declare @RTOName varchar(max) = ''
			declare @imASterid int =0
				set @vehicleno=@e.value('(/Fields/Header/VehicleNo)[1]', 'int')
					select @RTOName=sName from vCrm_VehicleMaster with(nolock) where iMasterId = @vehicleno
					select @imASterid=iMasterId from vCore_VehicleRTOValidityCheck with(nolock) where sName = @RTOName
	return @imASterid

end

--------------------------------------------------------------------------------------------------------------------------------------------------------
  step 1 : CRM->Settings -> Fields -> Search Owner and Branch -> Edit Branch and Owner -> Properties then check button 'allow as parameters'
step 2 : Trip Planner Page Layout 
--Allow parameters for branch and Owner Fields and set &{SQLFCITEMS3} in page layout rule

alter function [dbo].[fCore_Var3](@e xml) 
returns varchar(max)
as 
begin
	Declare @Branch int = @e.value('(/Fields/Header/Branch)[1]', 'int')
	Declare @Owner int =  @e.value('(/Fields/Header/iAssignedTo)[1]', 'int')
	Declare @result varchar(max); 

	select @result = COALESCE(@result+',','')+ (concat(sName,'|',iMasterId)) from (select distinct L.sName,L.iMasterId  from vCore_InwardandOutward OI Inner join vCore_Location L on  OI.iDestination=L.iMasterId where OI.Branch=@Branch and OI.Type=38 and OI.iAssignedTo=@Owner) A
	return @result
end
5------------------------------
alter function [fCore_Var5](@e xml) returns int
as
begin
	declare @iOpportunityId int = @e.value('(/Fields/Header/iOpportunityId)[1]', 'int')
	declare @result int = 0

		select @result=count(iApprovalStatus) from vCrm_Quote with(nolock) where iOpportunityId = @iOpportunityId and iApprovalStatus =115

			if(@result>=1)
			begin
			select @result = 1
			end
			else 
			begin
			select @result = 0
			end
			return @result
end
-------------xml to table as runtime -------------------imporatant for body
alter Function fCore_Var6 (@e xml) returns decimal(18,2)
as 
begin
	declare @masterId int = @e.value('(/Fields/Header/TransId)[1]', 'int')
	--declare @StartingHrs int = @e.value('(/Fields/BodyData/AllRows/BodyRow)[1]', 'int')
	declare @Rowindex int = @e.value('(/Fields/Header/CurrentRow)[1]', 'int')
	declare @closingKms decimal(18,2) = 0.00;
	declare @startKms decimal(18,2) = @e.value('(/Fields/BodyData/BodyRow/StartingKms)[1]', 'decimal(18,2)')
	declare @result decimal(18,2) = 0.00;

	if(@Rowindex=0)
	begin
		set @result = @startKms;
		return @result
	end

	declare @tblData table (iRowId int identity(0,1),StartingKms decimal(18,2),ClosingKms decimal(18,2))
	insert into @tblData (StartingKms,ClosingKms)
	select 
		X.Y.value('(StartingKms)[1]', 'decimal(18,2)') as StartingKms,
		X.Y.value('(ClosingKms)[1]', 'decimal(18,2)') as ClosingKms
	from @e.nodes('(Fields/BodyData/AllRows/BodyRow)') as X(Y)

	select top 1 @result = ClosingKms from @tblData where iRowId=(@Rowindex-1);
	return @result

end
------------------------
create function fCore_Var7  (@e xml) returns varchar(max)
as begin
	declare @product int = @e.value('(/Fields/Header/iProductGroup)[1]', 'int')
	declare @TransId int = @e.value('(/Fields/Header/TransId)[1]', 'int')
	declare @code varchar(max) =''
	declare @codenum int =0
	DECLARE @RES varchar(max)=''

		select @code=sCode from vCore_Product where iMasterId =@product
		select @codenum=count(iProductGroup) from vCore_Product where iProductGroup =@product and iMasterId<@TransId
		set @codenum =@codenum+1

			if(isnull(@code,'')<>'')
			begin
			SET @RES=CONCAT(@code,'-',@codenum)
			end
			else
			begin
			set @res =''
			end
return @RES
end
--------------------------

alter Function fCore_Var8 (@e xml) 
returns varchar(max)
as 
begin
DECLARE @result  varchar(max) =''

	declare @TransId int = @e.value('(/Fields/Header/TransId)[1]', 'int')
	select @result= COALESCE(@result+',','')+ (concat(sName,'|',iMasterId)) from (
	select
	sName,iMasterId from vCrm_Account where
	iMasterId not in
	(select iAccount from vCrm_Opportunities where iStage not in (11,12) and iTransId>0)
	and
	iMasterId>0 and iMasterId<>@TransId)a
	return @result
end


